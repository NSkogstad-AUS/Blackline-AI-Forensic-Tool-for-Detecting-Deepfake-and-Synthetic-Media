Forensic Tool for Detecting Deepfake and Synthetic Media

Project Objective
To develop a forensic tool for detecting and analysing deepfake, digitally altered, and synthetic media (AI generated). The system will utilise image and video analysis algorithms, machine learning, and metadata analysis techniques to provide reliable, comprehensive, and automated forensic assistance for forensic investigators.

Key Requirements

Detection and analysis of deepfake, digitally altered and synthetic images and video

Detailed forensic analysis and reporting of anomalies in images and video sequences

User-friendly, intuitive interface for use by forensic investigators and analysts.

Media Analysis Algorithms & Techniques (Examples)

Deep Learning Algorithms

Convolutional Neural Networks (CNNs)

Extract visual features from frames and detect anomalies or inconsistencies

Generative Adversarial Networks (GAN) Detection

Identify media generated by GANs based on feature-level and residual artifacts

Autoencoders

Use reconstruction error to identify image/video regions inconsistent with learned normal patterns

3D CNNs / LRCNs

Analyse spatial-temporal inconsistencies in video (e.g. unnatural facial expressions or motion)

Transformers for Video

Capture long-term temporal dependencies and scene coherence across video frames.

Traditional Forensic Techniques

Error Level Analysis (ELA)

Detect anomalies and inconsistencies in images and video

Noise Analysis

Analyse spatial noise distributions for irregularities.

Local Binary Patterns (LBP)

Extract texture features to highlight altered regions.

Copy-Move Forgery Detection

Identify duplicated regions in images or video frames.

Temporal Inconsistency Detection

Identify irregular blinking, facial jitter, or head pose changes in video.

Metadata Analysis Techniques

Exif Data Analysis

Examine metadata from still images and videos for inconsistencies (e.g. device, GPS, timestamps, etc)

Container Metadata & Frame Hashing

Use tools to extract and verify structural integrity of video files e.g. FFmpeg.

Data Header Analysis

Examine the integrity and consistency of header information to detect tampering.

Hashing Techniques (MD5, SHA)

Verify file integrity and identify tampering

Key Functionality

Media Upload and Input Handling

Support for JPEG, PNG, GIF, MP4, AVI etc

Interface for image and video upload

Preprocessing

Frame extraction (for video), resizing, normalisation, format validation

Detection Modules

Integrate pre-trained CNN, GAN, and temporal models

Confidence scoring and anomaly flagging

Forensic Analysis Tools

Implement ELA, noise inconsistency, and LBP-based analysis

Frame-by-frame forgery detection

Metadata Inspection

Integrate ExifTool, FFmpeg, and hashing libraries.

Display suspicious or altered metadata.

Visualization and Reporting

Generate heatmaps, ELA overlays, and anomaly scores.

Export findings as PDF/JSON reports.

User Interface

Simple web UI built with Flask or React.js.

View uploaded media, navigate frames, view analysis.

Storage/Logging

Save metadata, logs, and forensic results using SQLite or PostgreSQL.

Intended Outcomes & Benefits

A robust, forensically sound tool for investigating deepfake and synthetic media

Automated forensic support for visual content verification and analysis

Enhanced evidence integrity and chain-of-custody traceability.

Modular design to support future integration of audio analysis, multimodal AI created material