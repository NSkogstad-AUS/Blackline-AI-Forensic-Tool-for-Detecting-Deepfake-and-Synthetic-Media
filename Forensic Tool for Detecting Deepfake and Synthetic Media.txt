Forensic Tool for Detecting Deepfake and Synthetic Media
Project Objective
To develop a forensic tool for detecting and analysing deepfake, digitally altered, and
synthetic media (AI generated). The system will utilise image and video analysis algorithms,
machine learning, and metadata analysis techniques to provide reliable, comprehensive, and
automated forensic assistance for forensic investigators.

Key Requirements
•
•
•

Detection and analysis of deepfake, digitally altered and synthetic images and video
Detailed forensic analysis and reporting of anomalies in images and video sequences
User-friendly, intuitive interface for use by forensic investigators and analysts.

Media Analysis Algorithms & Techniques (Examples)
Deep Learning Algorithms
1. Convolutional Neural Networks (CNNs)
o Extract visual features from frames and detect anomalies or inconsistencies
2. Generative Adversarial Networks (GAN) Detection
o Identify media generated by GANs based on feature-level and residual artifacts
3. Autoencoders
o Use reconstruction error to identify image/video regions inconsistent with learned
normal patterns
4. 3D CNNs / LRCNs
o Analyse spatial-temporal inconsistencies in video (e.g. unnatural facial expressions or
motion)
5. Transformers for Video
o Capture long-term temporal dependencies and scene coherence across video frames.
Traditional Forensic Techniques
1. Error Level Analysis (ELA)
o
Detect anomalies and inconsistencies in images and video
2. Noise Analysis
o
Analyse spatial noise distributions for irregularities.
3. Local Binary Patterns (LBP)
o
Extract texture features to highlight altered regions.
4. Copy-Move Forgery Detection
o
Identify duplicated regions in images or video frames.
5. Temporal Inconsistency Detection
o
Identify irregular blinking, facial jitter, or head pose changes in video.

Metadata Analysis Techniques
1. Exif Data Analysis
o Examine metadata from still images and videos for inconsistencies (e.g. device, GPS,
timestamps, etc)
2. Container Metadata & Frame Hashing
o Use tools to extract and verify structural integrity of video files e.g. FFmpeg.
3. Data Header Analysis
a. Examine the integrity and consistency of header information to detect tampering.
4. Hashing Techniques (MD5, SHA)
o
Verify file integrity and identify tampering

Key Functionality
•
•
•
•
•
•
•
•

Media Upload and Input Handling
o Support for JPEG, PNG, GIF, MP4, AVI etc
o Interface for image and video upload
Preprocessing
o Frame extraction (for video), resizing, normalisation, format validation
Detection Modules
o Integrate pre-trained CNN, GAN, and temporal models
o Confidence scoring and anomaly flagging
Forensic Analysis Tools
o Implement ELA, noise inconsistency, and LBP-based analysis
o Frame-by-frame forgery detection
Metadata Inspection
o Integrate ExifTool, FFmpeg, and hashing libraries.
o Display suspicious or altered metadata.
Visualization and Reporting
o Generate heatmaps, ELA overlays, and anomaly scores.
o Export findings as PDF/JSON reports.
User Interface
o Simple web UI built with Flask or React.js.
o View uploaded media, navigate frames, view analysis.
Storage/Logging
o Save metadata, logs, and forensic results using SQLite or PostgreSQL.

Intended Outcomes & Benefits
•
•
•
•

A robust, forensically sound tool for investigating deepfake and synthetic media
Automated forensic support for visual content verification and analysis
Enhanced evidence integrity and chain-of-custody traceability.
Modular design to support future integration of audio analysis, multimodal AI created
material

